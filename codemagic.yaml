workflows:
  ios-testflight:
    name: DanceDate iOS TestFlight Deploy
    max_build_duration: 120
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: DanceDate iOS Production
    environment:
      ios_signing:
        provisioning_profiles:
          - DanceDate iOS App Store
        certificates:
          - DanceDate iOS Distribution
      vars:
        BUNDLE_ID: "com.antho.dancedate"
        XCODE_WORKSPACE: "DanceDate.xcworkspace"
        XCODE_SCHEME: "DanceDate"
      node: 18.20.4
      xcode: 15.2
      cocoapods: default

    scripts:
      - name: Set environment overrides for C++17
        script: |
          export GCC_CXX_STANDARD=17
          export CLANG_CXX_LANGUAGE_STANDARD=gnu++17
          export CXXFLAGS="-std=gnu++17"
          echo "ðŸ”§ C++ set to gnu++17"

      - name: Install npm dependencies
        script: npm install

      - name: Install Expo CLI
        script: npm install -g @expo/cli

      - name: Create missing assets
        script: |
          mkdir -p assets/sounds
          touch assets/sounds/notification.wav

      - name: Expo prebuild
        script: npx expo prebuild --platform ios --clean

      - name: Install CocoaPods (fresh)
        script: |
          cd ios
          rm -rf Pods Podfile.lock
          pod install --repo-update

      - name: Sanity check Pods & fix Hermes path (symlink fallback)
        script: |
          cd ios
          if [ -d "Pods/Target Support Files" ] && [ ! -e "Pods/Pods" ]; then
            echo "ðŸ”— Creating Pods/Pods symlink fallback to avoid Hermes xcfilelist bad path"
            ln -s . "Pods/Pods"
          fi
          # Show whether the filelists actually exist:
          ls -la "Pods/Target Support Files/hermes-engine" || true
          ls -la "Pods/Pods/Target Support Files/hermes-engine" || true

      - name: Create ExportOptions.plist
        script: |
          cd ios
          cat > ExportOptions.plist << "EOF"
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>uploadBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
              <key>compileBitcode</key>
              <false/>
              <key>teamID</key>
              <string>RZ3LX2QC88</string>
          </dict>
          </plist>
          EOF

      - name: Normalize iOS deployment targets
        script: |
          cd ios
          find . -name "*.pbxproj" -exec sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = [0-9.]*/IPHONEOS_DEPLOYMENT_TARGET = 13.0/g' {} \;

      - name: Apply provisioning profiles to Xcode project
        script: |
          cd ios
          xcode-project use-profiles

      - name: Build ipa for distribution
        script: |
          cd ios
          xcodebuild clean \
            -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release

          # IMPORTANT: Manual signing (no CODE_SIGN_STYLE=Automatic) to avoid conflicts
          xcodebuild archive \
            -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -archivePath DanceDate.xcarchive \
            DEVELOPMENT_TEAM=RZ3LX2QC88 \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            PROVISIONING_PROFILE_SPECIFIER="DanceDate iOS App Store" \
            -allowProvisioningUpdates \
            COMPILER_INDEX_STORE_ENABLE=NO \
            SWIFT_COMPILATION_MODE=wholemodule \
            SWIFT_OPTIMIZATION_LEVEL=-O \
            OTHER_CPLUSPLUSFLAGS="-std=gnu++17" \
            CLANG_CXX_LANGUAGE_STANDARD=gnu++17 \
            CLANG_CXX_LIBRARY=libc++

          xcodebuild -exportArchive \
            -archivePath DanceDate.xcarchive \
            -exportPath exports \
            -exportOptionsPlist "$(pwd)/ExportOptions.plist"

    artifacts:
      - build/ios/ipa/*.ipa
      - ios/*.ipa
      - exports/*.ipa
      - /tmp/xcodebuild_logs/*.log

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        submit_to_app_store: false
