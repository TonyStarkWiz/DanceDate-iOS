workflows:
  ios-testflight:
    name: DanceDate iOS TestFlight Deploy
    max_build_duration: 120
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: DanceDate iOS Production
    environment:
      ios_signing:
        provisioning_profiles:
          - DanceDate iOS App Store
        certificates:
          - DanceDate iOS Distribution
      vars:
        BUNDLE_ID: "com.antho.dancedate"
        XCODE_WORKSPACE: "DanceDate.xcworkspace"
        XCODE_SCHEME: "DanceDate"
      node: 18.20.4
      xcode: 15.2
      cocoapods: default
    scripts:
      - name: Set environment overrides for C++17
        script: |
          # ☢️ NUKE SOLUTION: Force Xcode to prefer C++17 globally
          export GCC_CXX_STANDARD=17
          export CLANG_CXX_LANGUAGE_STANDARD=c++17
          export CXXFLAGS="-std=c++17"
          echo "🔧 Environment variables set to force C++17:"
          echo "GCC_CXX_STANDARD=$GCC_CXX_STANDARD"
          echo "CLANG_CXX_LANGUAGE_STANDARD=$CLANG_CXX_LANGUAGE_STANDARD"
          echo "CXXFLAGS=$CXXFLAGS"
      - name: Install npm dependencies
        script: |
          npm install
      - name: Install Expo CLI
        script: |
          npm install -g @expo/cli
      - name: Create missing assets
        script: |
          mkdir -p assets/sounds
          touch assets/sounds/notification.wav
      - name: Expo prebuild
        script: |
          npx expo prebuild --platform ios --clean
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install --repo-update
      - name: Clean Xcode DerivedData
        script: |
          rm -rf ~/Library/Developer/Xcode/DerivedData/*
      - name: Clean Codemagic caches and stale Pods
        script: |
          # Clean DerivedData and stale Pods to ensure Podfile changes apply
          rm -rf ~/Library/Developer/Xcode/DerivedData/*
          rm -rf ios/Pods ios/Podfile.lock
          # Complete clean of all build artifacts and caches
          rm -rf node_modules
          rm -rf ~/Library/Caches/com.apple.dt.Xcode
          rm -rf ~/Library/Caches/CocoaPods
          # Reinstall with forced react-native-screens 3.31.1
          npm install
      - name: Verify nuke solution C++17 settings
        script: |
          cd ios
          # Check react-native-screens version
          echo "📦 Checking react-native-screens version:"
          npm list react-native-screens
          # Check if global C++17 nuke settings are present in Podfile
          if grep -q "NUKE SOLUTION" Podfile; then
            echo "✅ Global C++17 nuke settings found in Podfile"
            grep -A 10 "NUKE SOLUTION" Podfile
          else
            echo "⚠️ Global C++17 nuke settings not found in Podfile"
          fi
      - name: Install CocoaPods with global C++17 nuke settings
        script: |
          cd ios
          # Install Pods with the updated Podfile that forces C++17 for ALL pods
          pod install --repo-update
          # Verify the nuke solution was applied
          echo "🔍 Verifying global C++17 nuke settings were applied:"
          if grep -q "NUKE SOLUTION" Podfile; then
            echo "✅ Podfile contains global C++17 nuke settings"
            # Show the actual nuke settings in the Podfile
            grep -A 8 "NUKE SOLUTION" Podfile
          else
            echo "❌ Podfile missing global C++17 nuke settings"
          fi
          # Verify the settings were actually applied to ALL Pods targets
          echo "🔍 Checking if C++17 nuke settings were applied to ALL Pods:"
          if [ -f "Pods/Pods.xcodeproj/project.pbxproj" ]; then
            cpp17_count=$(grep -c "CLANG_CXX_LANGUAGE_STANDARD.*c\+\+17" Pods/Pods.xcodeproj/project.pbxproj || echo "0")
            echo "✅ Found $cpp17_count C++17 settings in Pods project"
            if [ "$cpp17_count" -gt "0" ]; then
              echo "✅ Global C++17 nuke solution successfully applied"
            else
              echo "⚠️ No C++17 settings found in Pods project"
            fi
          fi
      - name: Create ExportOptions.plist
        script: |
          cd ios
          # Create ExportOptions.plist for IPA export
          cat > ExportOptions.plist << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>uploadBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
              <key>compileBitcode</key>
              <false/>
              <key>teamID</key>
              <string>RZ3LX2QC88</string>
          </dict>
          </plist>
          EOF
      - name: Fix iOS deployment targets
        script: |
          cd ios
          # Fix deployment target warnings by setting minimum iOS version
          find . -name "*.pbxproj" -exec sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = [0-9.]*;/IPHONEOS_DEPLOYMENT_TARGET = 13.0;/g' {} \;
      - name: Set up code signing settings on Xcode project
        script: |
          cd ios
          xcode-project use-profiles
      - name: Final clean before archive
        script: |
          # Final cleanup to ensure no cached build settings
          rm -rf ~/Library/Developer/Xcode/DerivedData/*
          rm -rf ~/Library/Caches/com.apple.dt.Xcode
          rm -rf ~/Library/Caches/CocoaPods
          # Verify clean state
          echo "🧹 Cleanup complete - no cached build settings should remain"
      - name: Build ipa for distribution
        script: |
          cd ios
          # Clean build folder first
          xcodebuild clean \
            -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release
          
          # Build archive with automatic code signing and compilation fixes
          xcodebuild archive \
            -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -archivePath DanceDate.xcarchive \
            DEVELOPMENT_TEAM=RZ3LX2QC88 \
            CODE_SIGN_STYLE=Automatic \
            -allowProvisioningUpdates \
            COMPILER_INDEX_STORE_ENABLE=NO \
            SWIFT_COMPILATION_MODE=wholemodule \
            SWIFT_OPTIMIZATION_LEVEL=-O \
            CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER=NO \
            GCC_WARN_INHIBIT_ALL_WARNINGS=YES \
            CLANG_WARN_DOCUMENTATION_COMMENTS=NO \
            CLANG_WARN_STRICT_PROTOTYPES=NO \
            CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION=NO \
            ONLY_ACTIVE_ARCH=NO
          
          # Export IPA with absolute path to ExportOptions.plist
          xcodebuild -exportArchive \
            -archivePath DanceDate.xcarchive \
            -exportPath exports \
            -exportOptionsPlist "$(pwd)/ExportOptions.plist"
    artifacts:
      - build/ios/ipa/*.ipa
      - ios/*.ipa
      - /tmp/xcodebuild_logs/*.log
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        submit_to_app_store: false
