workflows:
  ios-testflight:
    name: DanceDate iOS TestFlight Deploy
    max_build_duration: 120
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: DanceDate iOS Production
    environment:
      ios_signing:
        provisioning_profiles:
          - DanceDate iOS App Store
        certificates:
          - DanceDate iOS Distribution
      vars:
        BUNDLE_ID: "com.antho.dancedate"
        XCODE_WORKSPACE: "DanceDate.xcworkspace"
        XCODE_SCHEME: "DanceDate"
      node: 18.17.0
      xcode: 15.2
      cocoapods: default
    scripts:
      - name: Install npm dependencies
        script: |
          npm install
      - name: Install Expo CLI
        script: |
          npm install -g @expo/cli
      - name: Create missing assets
        script: |
          mkdir -p assets/sounds
          touch assets/sounds/notification.wav
      - name: Expo prebuild
        script: |
          npx expo prebuild --platform ios --clean
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install --repo-update
      - name: Create skeleton build
        script: |
          cd ios
          # Create a minimal skeleton build by removing problematic dependencies
          echo "Creating skeleton build to test pipeline..."
          
          # Remove problematic dependencies from package.json
          cd ..
          npm uninstall react-native-screens || true
          npm uninstall react-native-reanimated || true
          npm uninstall expo-camera || true
          npm uninstall expo-image-picker || true
          npm uninstall expo-location || true
          npm uninstall expo-notifications || true
          npm uninstall expo-apple-authentication || true
          npm uninstall @react-native-google-signin/google-signin || true
          npm uninstall react-native-purchases || true
          npm uninstall react-native-purchases-ui || true
          npm uninstall @stripe/stripe-react-native || true
          npm uninstall firebase || true
          npm uninstall firebase-admin || true
          npm uninstall firebase-functions || true
          
          # Clean and reinstall
          rm -rf node_modules
          npm install
          
          cd ios
          # Clean and reinstall pods
          rm -rf Pods
          rm Podfile.lock
          pod install --repo-update
      - name: Fix iOS deployment targets
        script: |
          cd ios
          # Fix deployment target warnings by setting minimum iOS version
          find . -name "*.pbxproj" -exec sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = [0-9.]*;/IPHONEOS_DEPLOYMENT_TARGET = 13.0;/g' {} \;
      - name: Set up code signing settings on Xcode project
        script: |
          cd ios
          xcode-project use-profiles
      - name: Build ipa for distribution
        script: |
          cd ios
          # Clean build folder first
          xcodebuild clean \
            -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release
          
          # Build archive with automatic code signing and compilation fixes
          xcodebuild archive \
            -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -archivePath DanceDate.xcarchive \
            DEVELOPMENT_TEAM=RZ3LX2QC88 \
            CODE_SIGN_STYLE=Automatic \
            -allowProvisioningUpdates \
            COMPILER_INDEX_STORE_ENABLE=NO \
            SWIFT_COMPILATION_MODE=wholemodule \
            SWIFT_OPTIMIZATION_LEVEL=-O \
            CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER=NO \
            GCC_WARN_INHIBIT_ALL_WARNINGS=YES \
            CLANG_WARN_DOCUMENTATION_COMMENTS=NO \
            CLANG_WARN_STRICT_PROTOTYPES=NO \
            CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION=NO \
            ONLY_ACTIVE_ARCH=NO
          
          # Export IPA with absolute path to ExportOptions.plist
          xcodebuild -exportArchive \
            -archivePath DanceDate.xcarchive \
            -exportPath exports \
            -exportOptionsPlist "$(pwd)/ExportOptions.plist"
    artifacts:
      - build/ios/ipa/*.ipa
      - ios/*.ipa
      - /tmp/xcodebuild_logs/*.log
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        submit_to_app_store: false
