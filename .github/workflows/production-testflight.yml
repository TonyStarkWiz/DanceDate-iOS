name: Production Build and Deploy to TestFlight (Fixed)

on:
  workflow_dispatch:

jobs:
  production-deploy:
    runs-on: macos-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Expo CLI
        run: npm install -g @expo/cli
        
      - name: Create missing assets
        run: |
          mkdir -p assets/sounds
          touch assets/sounds/notification.wav
          
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
          
      - name: Expo prebuild for Production
        run: npx expo prebuild --platform ios --clean
        
      - name: Fix iOS Deployment Target
        run: |
          cd ios
          echo "üîß Fixing deployment targets..."
          find . -name "*.pbxproj" -exec sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 9.0/IPHONEOS_DEPLOYMENT_TARGET = 13.0/g' {} \;
          find . -name "*.pbxproj" -exec sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 10.0/IPHONEOS_DEPLOYMENT_TARGET = 13.0/g' {} \;
          find . -name "*.pbxproj" -exec sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 11.0/IPHONEOS_DEPLOYMENT_TARGET = 13.0/g' {} \;
          echo "‚úÖ Deployment targets updated"
          
      - name: Install CocoaPods
        run: |
          cd ios
          pod install --repo-update
          
      - name: Configure Production Settings
        run: |
          cd ios
          sed -i '' 's/DEVELOPMENT_TEAM = "";/DEVELOPMENT_TEAM = "RZ3LX2QC88";/g' DanceDate.xcodeproj/project.pbxproj || true
          sed -i '' 's/CODE_SIGN_STYLE = Manual;/CODE_SIGN_STYLE = Automatic;/g' DanceDate.xcodeproj/project.pbxproj || true
          
      - name: Build Archive for App Store
        run: |
          cd ios
          echo "üèóÔ∏è Building production archive..."
          xcodebuild archive \
            -workspace DanceDate.xcworkspace \
            -scheme DanceDate \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath DanceDate.xcarchive \
            DEVELOPMENT_TEAM=RZ3LX2QC88 \
            CODE_SIGN_STYLE=Automatic \
            -allowProvisioningUpdates
            
      - name: Export IPA for App Store
        run: |
          cd ios
          echo "üì¶ Exporting IPA..."
          xcodebuild -exportArchive \
            -archivePath DanceDate.xcarchive \
            -exportPath exports \
            -exportOptionsPlist ExportOptions.plist
            
      - name: Upload to TestFlight
        run: |
          cd ios
          echo "üöÄ Uploading to TestFlight..."
          IPA_FILE=$(find exports -name "*.ipa" -type f | head -1)
          
          if [ -n "$IPA_FILE" ]; then
            xcrun altool --upload-app \
              --type ios \
              --file "$IPA_FILE" \
              --apiKey Q7GZ89252A \
              --apiIssuer dc671579-38b9-4e57-91dd-41ad841eeed6 \
              --verbose
          else
            echo "‚ùå No IPA file found!"
            exit 1
          fi
            
      - name: Success
        run: |
          echo "üéâ Production build v1.0.3 (12) uploaded to TestFlight!"
          echo "üì± Check App Store Connect for your build"
          echo "üí∞ FREE production deployment complete!"
