name: Production Build and Deploy to TestFlight (Fixed)

on:
  workflow_dispatch:

jobs:
  production-deploy:
    runs-on: macos-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Expo CLI
        run: npm install -g @expo/cli
        
      - name: Create missing assets
        run: |
          mkdir -p assets/sounds
          touch assets/sounds/notification.wav
          
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
          
      - name: Verify Certificates
        run: |
          echo "üîê Available code signing identities:"
          security find-identity -v -p codesigning
          
      - name: Expo prebuild for Production
        run: npx expo prebuild --platform ios --clean
        
      - name: Comprehensive iOS Deployment Target Fix
        run: |
          cd ios
          echo "üîß Comprehensive deployment target fixes..."
          
          # Fix all possible deployment target values
          find . -name "*.pbxproj" -exec sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 9\.0/IPHONEOS_DEPLOYMENT_TARGET = 13.0/g' {} \;
          find . -name "*.pbxproj" -exec sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 10\.0/IPHONEOS_DEPLOYMENT_TARGET = 13.0/g' {} \;
          find . -name "*.pbxproj" -exec sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 11\.0/IPHONEOS_DEPLOYMENT_TARGET = 13.0/g' {} \;
          find . -name "*.pbxproj" -exec sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 12\.0/IPHONEOS_DEPLOYMENT_TARGET = 13.0/g' {} \;
          
          # Also fix in Podfile
          sed -i '' "s/platform :ios, '.*'/platform :ios, '13.0'/g" Podfile || true
          
          echo "‚úÖ All deployment targets set to 13.0"
          
      - name: Clean and Install CocoaPods
        run: |
          cd ios
          # Clean CocoaPods cache and reinstall
          pod cache clean --all || true
          rm -rf Pods/ Podfile.lock || true
          pod install --repo-update --clean-install
          
      - name: Final Project Configuration
        run: |
          cd ios
          echo "üîß Final production configuration..."
          
          # Ensure proper team and signing settings
          sed -i '' 's/DEVELOPMENT_TEAM = "";/DEVELOPMENT_TEAM = "RZ3LX2QC88";/g' DanceDate.xcodeproj/project.pbxproj || true
          sed -i '' 's/CODE_SIGN_STYLE = Manual;/CODE_SIGN_STYLE = Automatic;/g' DanceDate.xcodeproj/project.pbxproj || true
          
          # Add provisioning profile settings
          sed -i '' '/DEVELOPMENT_TEAM = "RZ3LX2QC88";/a\
PROVISIONING_PROFILE_SPECIFIER = "";' DanceDate.xcodeproj/project.pbxproj || true
          
          echo "‚úÖ Production configuration complete"
          
      - name: Build Archive for App Store (Robust)
        run: |
          cd ios
          echo "üèóÔ∏è Building production archive..."
          
          # Clean build first
          xcodebuild clean \
            -workspace DanceDate.xcworkspace \
            -scheme DanceDate \
            -configuration Release
          
          # Build archive with comprehensive settings
          xcodebuild archive \
            -workspace DanceDate.xcworkspace \
            -scheme DanceDate \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath DanceDate.xcarchive \
            DEVELOPMENT_TEAM=RZ3LX2QC88 \
            CODE_SIGN_STYLE=Automatic \
            PROVISIONING_PROFILE_SPECIFIER="" \
            -allowProvisioningUpdates \
            -authenticationKeyPath=$(pwd)/../AuthKey_Q7GZ89252A.p8 \
            -authenticationKeyID=Q7GZ89252A \
            -authenticationKeyIssuerID=dc671579-38b9-4e57-91dd-41ad841eeed6 \
            OTHER_CODE_SIGN_FLAGS="--deep --force" \
            GCC_OPTIMIZATION_LEVEL=0 \
            SWIFT_OPTIMIZATION_LEVEL="-Onone"
            
      - name: Verify Archive
        run: |
          cd ios
          if [ -d "DanceDate.xcarchive" ]; then
            echo "‚úÖ Archive created successfully"
            echo "üìä Archive contents:"
            ls -la DanceDate.xcarchive/Products/Applications/
          else
            echo "‚ùå Archive creation failed!"
            exit 1
          fi
          
      - name: Create API Key File
        run: |
          echo "${{ secrets.APPSTORE_PRIVATE_KEY }}" | base64 -d > AuthKey_Q7GZ89252A.p8
          chmod 600 AuthKey_Q7GZ89252A.p8
          
      - name: Export IPA for App Store
        run: |
          cd ios
          echo "üì¶ Exporting production IPA..."
          xcodebuild -exportArchive \
            -archivePath DanceDate.xcarchive \
            -exportPath exports \
            -exportOptionsPlist ExportOptions.plist \
            -authenticationKeyPath $(pwd)/../AuthKey_Q7GZ89252A.p8 \
            -authenticationKeyID Q7GZ89252A \
            -authenticationKeyIssuerID dc671579-38b9-4e57-91dd-41ad841eeed6
            
      - name: Verify and Upload to TestFlight
        run: |
          cd ios
          
          # Verify IPA exists
          if [ ! -d "exports" ]; then
            echo "‚ùå Exports directory not found!"
            exit 1
          fi
          
          IPA_FILE=$(find exports -name "*.ipa" -type f | head -1)
          if [ -z "$IPA_FILE" ]; then
            echo "‚ùå No IPA file found in exports!"
            ls -la exports/
            exit 1
          fi
          
          echo "‚úÖ Found IPA: $IPA_FILE"
          echo "üìä IPA size: $(du -h "$IPA_FILE")"
          
          # Upload to TestFlight
          echo "üöÄ Uploading production build to TestFlight..."
          xcrun altool --upload-app \
            --type ios \
            --file "$IPA_FILE" \
            --apiKey Q7GZ89252A \
            --apiIssuer dc671579-38b9-4e57-91dd-41ad841eeed6 \
            --verbose
            
      - name: Cleanup
        if: always()
        run: |
          rm -f AuthKey_Q7GZ89252A.p8 || true
          
      - name: Production Success
        run: |
          echo "üéâ PRODUCTION SUCCESS! DanceDate v1.0.3 (12) uploaded!"
          echo "üì± Production build submitted to TestFlight"
          echo "‚úàÔ∏è Check App Store Connect in 5-10 minutes"
          echo "üí∞ FREE production deployment - $99/month saved!"
          echo "üèÜ Professional iOS CI/CD system complete!"
