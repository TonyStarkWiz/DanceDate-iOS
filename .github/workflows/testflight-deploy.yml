name: Complete Build and Deploy to TestFlight

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: macos-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Expo CLI
        run: npm install -g @expo/cli
        
      - name: Create missing assets
        run: |
          mkdir -p assets/sounds
          touch assets/sounds/notification.wav
          
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
          
      - name: Verify Certificates
        run: |
          echo "🔐 Checking imported certificates:"
          security find-identity -v -p codesigning
          
      - name: Expo prebuild
        run: npx expo prebuild --platform ios --clean
        
      - name: Fix iOS Deployment Target
        run: |
          cd ios
          echo "🔧 Fixing iOS deployment targets..."
          find . -name "*.pbxproj" -exec sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 9.0/IPHONEOS_DEPLOYMENT_TARGET = 13.0/g' {} \;
          find . -name "*.pbxproj" -exec sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 10.0/IPHONEOS_DEPLOYMENT_TARGET = 13.0/g' {} \;
          find . -name "*.pbxproj" -exec sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 11.0/IPHONEOS_DEPLOYMENT_TARGET = 13.0/g' {} \;
          echo "✅ Deployment targets updated"
          
      - name: Install CocoaPods
        run: |
          cd ios
          pod install --repo-update
          
      - name: Configure Code Signing
        run: |
          cd ios
          echo "🔧 Configuring automatic code signing..."
          # Update project settings for proper signing
          sed -i '' 's/CODE_SIGN_STYLE = Manual;/CODE_SIGN_STYLE = Automatic;/g' DanceDate.xcodeproj/project.pbxproj || true
          sed -i '' 's/DEVELOPMENT_TEAM = "";/DEVELOPMENT_TEAM = "RZ3LX2QC88";/g' DanceDate.xcodeproj/project.pbxproj || true
          echo "✅ Code signing configured"
          
      - name: Build and Archive
        run: |
          cd ios
          echo "🏗️ Building and archiving iOS app..."
          xcodebuild archive \
            -workspace DanceDate.xcworkspace \
            -scheme DanceDate \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath DanceDate.xcarchive \
            DEVELOPMENT_TEAM=RZ3LX2QC88 \
            CODE_SIGN_STYLE=Automatic \
            -allowProvisioningUpdates \
            -authenticationKeyPath=${{ github.workspace }}/AuthKey_Q7GZ89252A.p8 \
            -authenticationKeyID=Q7GZ89252A \
            -authenticationKeyIssuerID=dc671579-38b9-4e57-91dd-41ad841eeed6
            
      - name: Verify Archive
        run: |
          cd ios
          echo "📁 Checking archive creation:"
          ls -la DanceDate.xcarchive/
          echo "✅ Archive created successfully"
          
      - name: Export IPA for App Store
        run: |
          cd ios
          echo "📦 Exporting IPA for App Store..."
          xcodebuild -exportArchive \
            -archivePath DanceDate.xcarchive \
            -exportPath exports \
            -exportOptionsPlist ExportOptions.plist
            
      - name: Verify IPA Creation
        run: |
          cd ios
          echo "📱 Checking IPA creation:"
          ls -la exports/
          IPA_FILE=$(find exports -name "*.ipa" -type f | head -1)
          if [ -n "$IPA_FILE" ]; then
            echo "✅ IPA created: $IPA_FILE"
            echo "📊 IPA size: $(du -h "$IPA_FILE")"
          else
            echo "❌ No IPA file found!"
            exit 1
          fi
          
      - name: Create App Store Connect API Key
        run: |
          echo "${{ secrets.APPSTORE_PRIVATE_KEY }}" | base64 -d > AuthKey_Q7GZ89252A.p8
          chmod 600 AuthKey_Q7GZ89252A.p8
          echo "🔑 API key created"
          
      - name: Upload to TestFlight
        run: |
          cd ios
          echo "🚀 Uploading to TestFlight..."
          
          # Find IPA file
          IPA_FILE=$(find exports -name "*.ipa" -type f | head -1)
          
          if [ -n "$IPA_FILE" ]; then
            echo "📱 Uploading: $IPA_FILE"
            
            # Upload using altool with API key
            xcrun altool --upload-app \
              --type ios \
              --file "$IPA_FILE" \
              --apiKey Q7GZ89252A \
              --apiIssuer dc671579-38b9-4e57-91dd-41ad841eeed6 \
              --verbose
              
            echo "✅ Upload command completed"
          else
            echo "❌ No IPA file found for upload!"
            exit 1
          fi
          
      - name: Cleanup
        if: always()
        run: |
          rm -f AuthKey_Q7GZ89252A.p8
          echo "🧹 Cleanup completed"
          
      - name: Success Notification
        run: |
          echo "🎉 SUCCESS! DanceDate deployed to TestFlight!"
          echo "📱 Check App Store Connect for your build"
          echo "✈️ TestFlight build should appear in 5-10 minutes"
          echo "💰 Deployed for FREE - no EAS costs!"
          echo "🚀 Your unlimited deployment system works!"
